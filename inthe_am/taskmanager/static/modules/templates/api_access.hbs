<div class="row standalone">
    <h2>Accessing your tasks via the REST API</h2>

    <table class="pure-table pure-table-horizontal">
        <tr>
            <th>
                Username
            </th>
            <td>
                {{ controllers.application.user.username }}
            </td>
        </tr>
        <tr>
            <th>
                Api Key
            </th>
            <td>
                {{ controllers.application.user.api_key }}
            </td>
        </tr>
    </table>


    <h3>Authentication</h3>

    <p>
        Using your API key and username, use the header "<code>Authorization</code>";
        for an example:
    </p>

    <code>
    <pre>
        Authorization: ApiKey {{ controllers.application.user.username }}:{{ controllers.application.user.api_key }}
    </pre>
    </code>

    <h3>Endpoints</h3>

    <h4>Pending Tasks</h4>

    <table class="pure-table pure-table-horizontal">
        <tr>
            <th>
                Task List
            </th>
            <td>
                <code>https://inthe.am/api/v1/task/</code>
            </td>
        </tr>
        <tr>
            <th>
                Task Detail
            </th>
            <td>
                <code>https://inthe.am/api/v1/task/<b>&lt;TASK UUID&gt;</b>/</code>
            </td>
        </tr>
    </table>


    <table class="pure-table pure-table-horizontal">
        <thead>
            <tr>
                <th>Method</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>GET</td>
                <td>Retrieve task information.</td>
            </tr>
            <tr>
                <td>POST</td>
                <td>
                    Create new task.<br />
                    <em>Used with 'Task List' endpoint only</em>.
                </td>
            </tr>
            <tr>
                <td>PUT</td>
                <td>
                    Update existing task.<br />
                    <em>Used with 'Task Detail' endpoint only</em>.
                </td>
            </tr>
            <tr>
                <td>DELETE</td>
                <td>
                    Marks a task as completed.
                    After ran, task will only be accessible from 'Completed Task' endpoints.<br />
                    <em>Used with 'Task Detail' endpoint only</em>.
                </td>
            </tr>
        </tbody>
    </table>

    <h4>Completed Tasks</h4>

    <table class="pure-table pure-table-horizontal">
        <tr>
            <th>
                Completed Task List
            </th>
            <td>
                <code>https://inthe.am/api/v1/completedtask/</code>
            </td>
        </tr>
        <tr>
            <th>
                Completed Task Detail
            </th>
            <td>
                <code>https://inthe.am/api/v1/completedtask/<b>&lt;TASK UUID&gt;</b>/</code>
            </td>
        </tr>
    </table>

    <table class="pure-table pure-table-horizontal">
        <thead>
            <tr>
                <th>Method</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>GET</td>
                <td>Retrieve task information.</td>
            </tr>
        </tbody>
    </table>

    <h3>Task Format</h3>

    <p>
        Each task has the following fields:
    </p>
    <table class="pure-table pure-table-horizontal">
        <thead>
            <tr>
                <th>Field</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><code>id</code></td>
                <td>
                    The short ID number of a task.
                    These are not stable and are generally used when
                    using the Taskwarrior command-line client for ease-of
                    entry; if a task is completed, all
                    tasks may receive a new ID number.
                </td>
            </tr>
            <tr>
                <td><code>uuid</code></td>
                <td>
                    The unique ID number of a task.
                    These are stable and can be used in situations where
                    you may want to retrieve a task after it has been completed.
                    <br />
                    <strong>
                        This is the primary key of the task and is a
                        read-only property.
                    </strong>.
                </td>
            </tr>
            <tr>
                <td><code>resource_uri</code></td>
                <td>
                    This is the URL at which this task can be retrieved
                    again in the future.  It will match the URL you used
                    for fetching this task unless you fetched this task
                    from a listing endpoint.
                    <strong>
                        This is a read-only property.
                    </strong>
                </td>
            </tr>
            <tr>
                <td><code>status</code></td>
                <td>
                    One of <code>pending</code>, <code>completed</code>,
                    <code>waiting</code>, or <code>deleted</code>.
                    New tasks default to <code>pending</code>.
                </td>
            </tr>
            <tr>
                <td><code>urgency</code></td>
                <td>
                    A float representing the current calculated urgency level
                    of a task.  This is generated internally by taskwarrior
                    and thus is a <strong>read-only property</strong>.
                </td>
            </tr>
            <tr>
                <td><code>description</code></td>
                <td>
                    The title of this task.
                    <strong>This property is required.</strong>
                </td>
            </tr>
            <tr>
                <td><code>priority</code></td>
                <td>
                    One of <code>H</code>,
                    <code>M</code>, or <code>L</code>.
                </td>
            </tr>
            <tr>
                <td><code>due</code></td>
                <td>
                    A date string representing this task's due date and time.
                </td>
            </tr>
            <tr>
                <td><code>entry</code></td>
                <td>
                    A date string representing this task's entry date and time.
                </td>
            </tr>
            <tr>
                <td><code>modified</code></td>
                <td>
                    A date string representing this task's modified date and time.
                </td>
            </tr>
            <tr>
                <td><code>start</code></td>
                <td>
                    A date string representing the date and time this task was started.
                </td>
            </tr>
            <tr>
                <td><code>wait</code></td>
                <td>
                    A date string representing the date and time to wait
                    before listing this task in the pending task list.
                </td>
            </tr>
            <tr>
                <td><code>scheduled</code></td>
                <td>
                    A date string representing the date and time at which
                    work on this task is scheduled.
                </td>
            </tr>
            <tr>
                <td><code>depends</code></td>
                <td>
                    A comma-separated list of task UUIDs upon which
                    this task depends.
                </td>
            </tr>
            <tr>
                <td><code>annotations</code></td>
                <td>
                    A list of annotations added to this task.

                    <em>
                        Note: this is returned from Taskwarrior as a dictionary
                        having keys <code>entry</code> (the time at which this
                        annotation was added) and <code>description</code> (the
                        annotation text itself), but you are also able update or
                        create task entries by supplying simply a list of string
                        annotations you would like your updated or created task
                        to have.
                    </em>
                </td>
            </tr>
            <tr>
                <td><code>tags</code></td>
                <td>
                    A list of tags assigned to this task.
                </td>
            </tr>
            <tr>
                <td><code>imask</code></td>
                <td>
                    An integer representing this task's <code>imask</code>.  This
                    is a <strong>read-only property</strong> used internally
                    by Taskwarrior for recurring tasks.
                </td>
            </tr>
        </tbody>
    </table>

    <p>
        Example JSON formatted task:
    </p>

    <code>
    <pre>
        {
            "annotations": [
                {"description": "Chapter 1", "entry": "Mon, 3 Feb 2014 01:52:51 +0000"},
                {"description": "Chapter 2", "entry": "Mon, 3 Feb 2014 01:52:53 +0000"}
            ],
            "depends": null,
            "description": "The wheels on the bus go round and round",
            "due": null,
            "entry": "Mon, 3 Feb 2014 01:52:51 +0000",
            "id": 1,
            "imask": null,
            "modified": "Mon, 3 Feb 2014 01:52:52 +0000",
            "priority": null,
            "project": "Alphaville",
            "resource_uri": "/api/v1/task/b8d05cfe-8464-44ef-9d99-eb3e7809d337/",
            "scheduled": null,
            "start": null,
            "status": "waiting",
            "tags": ["very_unimportant", "delayed"],
            "urgency": -0.1,
            "uuid": "b8d05cfe-8464-44ef-9d99-eb3e7809d337",
            "wait": "Thu, 6 Feb 2014 01:52:51 +0000"
        }
    </pre>
    </code>

    <p>
        <em>
            Note that although the displayed task's datetime fields are
            encoded using RFC 2822 date strings in UTC,
            your supplied date strings will be parsed using
            <a href="http://labix.org/python-dateutil#head-c0e81a473b647dfa787dc11e8c69557ec2c3ecd2">dateutil's parse method</a>,
            so you can provide date strings in whatever format is most convenient for you,
            but ISO 8601 or RFC 2822 formatted dates are strongly recommended.
            <strong>
                Be sure to specify a time zone or offset in your date string.
            </strong>
        </em>
    </p>
    
</div>
